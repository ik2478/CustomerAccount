//buildscript {
//	repositories {
//		mavenCentral()
//	}
//	dependencies {
//		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE")
//	}
//}

plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "com.diffplug.gradle.spotless" version "3.25.0"
	id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.10"

}

group = 'com.discover'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2"
	}
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	//implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("io.projectreactor:reactor-test:3.1.0.RELEASE")
	//implementation("org.springframework.cloud:spring-cloud-starter-sleuth")
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation("org.springframework.cloud:spring-cloud-starter-netflix-hystrix")
	implementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner"){
		exclude group: "org.springframework.boot", module: "spring-boot-starter-web"
	}
	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

spotless {
	format 'misc', {
		target '**/*.gradle', '**/*.md', '**/.gitignore'

		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}

	java{
		target project.fileTree(project.rootDir){
			include '**/*.java'
		}
		googleJavaFormat().aosp()
	}

}

test {
	useJUnitPlatform()
}
